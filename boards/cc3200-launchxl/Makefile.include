# Define the cpu used by the CC3200 board:
export CPU        = cc3200
export CPU_MODEL ?= cc3200

ifneq (,$(filter gnrc_netdev_default,$(USEMODULE)))
	USEMODULE += cc110x gnrc_netdev2 gnrc_cc110x
endif

# setup serial terminal
export PORT_LINUX ?=/dev/ttyUSB0 # if multiple MCUs are connected the last number will increment
export PORT_DARWIN ?= $(firstword $(sort $(wildcard /dev/tty.usbmodem*)))

# setup serial terminal
include $(RIOTMAKE)/tools/serial.inc.mk

# config flasher tool 
# TODO: use real path "ENERGIA_ROOT not configured"
export ENERGIA_ROOT ?= /home/wlad/CC3200/cc3200/tools/cc3200prog
export PROGRAMMER ?= cc3200prog
# configure flasher
# export FLASHER = $(RIOTBOARD)/$(BOARD)/dist/flash.sh
# export FFLAGS  = $(ENERGIA_ROOT) $(PORT) $(ELFFILE)

# flash using openocd
ifeq ($(PROGRAMMER),openocd)
  export FLASHER = TBD
  export FFLAGS  = -p "$(PORT)" -e -w -v $(ELFFILE)

# flash using energia cc3200prog tool available as part of the Energia tool
else ifeq ($(PROGRAMMER),cc3200prog)
  export HEXFILE = $(ELFFILE:.elf=.bin)
  export FLASHER = $(RIOTBOARD)/$(BOARD)/dist/flasher.sh
  export FFLAGS  = $(ENERGIA_ROOT) $(PORT) $(HEXFILE)
endif

# debugger config
export DEBUGGER = ${PREFIX}gdb
export DEBUGGER_FLAGS = -x $(RIOTBOARD)/$(BOARD)/dist/$(CPU_MODEL)_gdb.conf $(ELFFILE)

# reset config
export RESET = $(RIOTBOARD)/$(BOARD)/dist/reset.sh
export RESET_FLAGS = $(BINDIR)

# Define the flash-tool and default port:
# TODO: make this flexible

# TODO: what is this even? is it needed
export OFLAGS    = -O binary --gap-fill 0xff
export OBJDUMPFLAGS += --disassemble --source --disassembler-options=force-thumb

# include common SPI functions
USEMODULE += periph_common

# include cortex defaults
include $(RIOTCPU)/cortexm_common/Makefile.include
